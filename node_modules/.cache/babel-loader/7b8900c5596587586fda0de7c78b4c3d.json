{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duncan\\\\Documents\\\\GitHub\\\\TeamPG_IoT_Frontend\\\\src\\\\devices\\\\DevicesForm.tsx\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { useForm, Controller } from \"react-hook-form\";\nexport default function DevicesForm({\n  loading,\n  onCreateDevice\n}) {\n  const {\n    register,\n    errors,\n    control,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    onCreateDevice(data.name);\n  };\n  /*name is the devices name, id is mac address, required means it must be entered\r\n  before it lets you move on*/\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"DEVICE ENROLLEMENT\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Device Name:\"), /*#__PURE__*/React.createElement(Controller, {\n    as: Input,\n    name: \"name\",\n    control: control,\n    defaultValue: \"\",\n    placeholder: \"Device Name\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"Device name\"), \" is required\"), /*#__PURE__*/React.createElement(Label, {\n    for: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Mac Address:\"), /*#__PURE__*/React.createElement(Controller, {\n    as: Input,\n    name: \"name\",\n    control: control,\n    defaultValue: \"\",\n    placeholder: \"Mac Address\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"Mac Address\"), \" is required\"), /*#__PURE__*/React.createElement(Label, {\n    for: \"device-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Gateway Connected ti:\"), /*#__PURE__*/React.createElement(Controller, {\n    as: Input,\n    name: \"name\",\n    control: control,\n    defaultValue: \"\",\n    placeholder: \"Gateway Name\",\n    id: \"device-name\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Gateway Name\"), \" is required\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"success\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["C:/Users/Duncan/Documents/GitHub/TeamPG_IoT_Frontend/src/devices/DevicesForm.tsx"],"names":["React","Card","CardHeader","CardBody","Form","FormGroup","Label","Input","Button","useForm","Controller","DevicesForm","loading","onCreateDevice","register","errors","control","handleSubmit","onSubmit","data","name","required"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Device } from \"./redux/devices-state\";\r\n\r\n    interface FormInput {\r\n        name: string;\r\n    }\r\n\r\n    interface DevicesFormProps {\r\n        loading: boolean;\r\n        onCreateDevice: (name: string) => void;\r\n    }\r\n\r\n    export default function DevicesForm({ loading, onCreateDevice }: DevicesFormProps): JSX.Element {\r\n        const { register, errors, control, handleSubmit } = useForm<FormInput>();\r\n        const onSubmit = (data: FormInput) => {\r\n            onCreateDevice(data.name);\r\n    };\r\n\r\n    /*name is the devices name, id is mac address, required means it must be entered\r\n    before it lets you move on*/\r\n    return <Card className=\"col-lg-6\">\r\n        <CardHeader>\r\n            <h3 className=\"mb-0\">DEVICE ENROLLEMENT</h3>\r\n        </CardHeader>\r\n        <CardBody>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <FormGroup>\r\n                    <Label for=\"device-name\">Device Name:</Label>\r\n                    <Controller\r\n                       as={Input}\r\n                        name=\"name\"\r\n                       control={control}\r\n                       defaultValue=\"\"\r\n                       placeholder=\"Device Name\"\r\n                       rules={{ required: true }}\r\n                    />\r\n                    {errors.name &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            <strong>Device name</strong> is required\r\n                                </div>}\r\n                    <Label for=\"device-name\">Mac Address:</Label>\r\n                    <Controller\r\n                        as={Input}\r\n                        name=\"name\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        placeholder=\"Mac Address\"\r\n                        rules={{ required: true }}\r\n                    />\r\n                    {errors.name &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            <strong>Mac Address</strong> is required\r\n                                </div>}\r\n                    <Label for=\"device-name\">Gateway Connected ti:</Label>\r\n                        <Controller\r\n                            as={Input}\r\n                            name=\"name\"\r\n                            control={control}\r\n                            defaultValue=\"\"\r\n                            placeholder=\"Gateway Name\"\r\n                            id=\"device-name\"\r\n                            rules={{ required: true }}\r\n                    />\r\n                    {errors.name &&\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            <strong>Gateway Name</strong> is required\r\n                                </div>}\r\n                </FormGroup>\r\n                <Button\r\n                    type=\"submit\"\r\n                    color=\"success\"\r\n                    disabled={loading}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </CardBody>\r\n    </Card>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}