{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duncan\\\\Documents\\\\GitHub\\\\TeamPG_IoT_Frontend\\\\src\\\\GlobalView\\\\GlobalView.tsx\";\nimport { Table, DropdownItem, DropdownMenu, DropdownToggle, Dropdown } from \"reactstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport devicesService from \"GlobalView/services/devices-service\";\nimport gatewaysService from \"GlobalView/services/Gateways-service\";\nexport default function LocalView() {\n  const [devices, setDevices] = useState([]);\n  const [gateways, setGateways] = useState([]);\n  const [selectedGateway, setSelectedGateway] = useState(null);\n  useEffect(() => {\n    devicesService.devices().then(devices => {\n      setDevices(devices);\n    });\n    gatewaysService.Gateways().then(gateways => {\n      setGateways(gateways);\n    });\n  }, []);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const handleGateway = name => {\n    setSelectedGateway(name);\n    setDropdownOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, selectedGateway ? selectedGateway : \"Selected Gateway\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, gateways === null || gateways === void 0 ? void 0 : gateways.map(gateways => {\n    return /*#__PURE__*/React.createElement(DropdownItem, {\n      onClick: () => handleGateway(gateways.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }\n    }, \" \", gateways.name);\n  }))), /*#__PURE__*/React.createElement(Table, {\n    className: \"align-items-center\",\n    responsive: true,\n    hover: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Gateway\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Mac Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, gateways === null || gateways === void 0 ? void 0 : gateways.map(gateways => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: gateways.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, gateways.name), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, gateways.macAdd));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Duncan/Documents/GitHub/TeamPG_IoT_Frontend/src/GlobalView/GlobalView.tsx"],"names":["Table","DropdownItem","DropdownMenu","DropdownToggle","Dropdown","React","useState","useEffect","devicesService","gatewaysService","LocalView","devices","setDevices","gateways","setGateways","selectedGateway","setSelectedGateway","then","Gateways","dropdownOpen","setDropdownOpen","toggle","handleGateway","name","map","id","macAdd"],"mappings":"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","sourcesContent":["import { Table, DropdownItem, DropdownMenu, DropdownToggle, Dropdown, Button } from \"reactstrap\";\r\nimport React, { ChangeEvent, useState, useEffect, dropDownOpen } from \"react\";\r\nimport \"../App.css\";\r\nimport { actions as devicesActions } from \"devices/redux/devices-actions\";\r\nimport { actions as systemActions } from \"../redux/system-actions\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"redux/root-reducer\";\r\nimport {gWays} from \"../Gateway/GatewaysForm\";\r\nimport devicesService from \"GlobalView/services/devices-service\";\r\nimport gatewaysService from \"GlobalView/services/Gateways-service\";\r\n\r\nexport default function LocalView(){\r\n\r\n        const [devices, setDevices] = useState([]);\r\n        const [gateways, setGateways] = useState([]);\r\n        const [selectedGateway, setSelectedGateway] = useState(null);\r\n\r\n        useEffect(() => {\r\n            devicesService.devices().then(devices => {setDevices(devices)});\r\n            gatewaysService.Gateways().then(gateways => {setGateways(gateways)});\r\n        }, []);\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => { setDropdownOpen(!dropdownOpen)}\r\n\r\n    const handleGateway = (name) => {\r\n        setSelectedGateway(name);\r\n        setDropdownOpen(false);\r\n    }\r\n\r\n        return <div>\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                <DropdownToggle caret>\r\n                    {selectedGateway?selectedGateway:\"Selected Gateway\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    {gateways?.map(gateways=> {\r\n                        return <DropdownItem onClick={()=>handleGateway(gateways.name)}> {gateways.name}\r\n                        </DropdownItem>\r\n                    })}\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n            <Table className=\"align-items-center\" responsive hover striped>\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">Gateway</th>\r\n                        <th scope=\"col\">Mac Address</th>\r\n                    </tr>\r\n                </thead>\r\n            <tbody>\r\n                {gateways?.map((gateways) => {\r\n                    return (\r\n                        <tr key={gateways.id}>\r\n                            <th scope=\"row\">\r\n                                {gateways.name}\r\n                            </th>\r\n                            <th scope=\"row\">\r\n                                {gateways.macAdd}\r\n                            </th>\r\n                        </tr>\r\n                       \r\n                    );\r\n                })}\r\n\r\n                </tbody>\r\n        </Table>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}