{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./root-reducer\";\nconst middlewares = getDefaultMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/paytn/Documents/GitHub/TeamPG_IoT_Frontend/src/redux/store.ts"],"names":["configureStore","getDefaultMiddleware","rootReducer","middlewares","store","reducer","middleware"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAGF,oBAAoB,EAAxC;AAEA,MAAMG,KAAK,GAAGJ,cAAc,CAAC;AAC3BK,EAAAA,OAAO,EAAEH,WADkB;AAE3BI,EAAAA,UAAU,EAAEH;AAFe,CAAD,CAA5B;AAOA,eAAeC,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: middlewares,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}